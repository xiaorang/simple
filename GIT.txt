教程地址
https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013743256916071d599b3aed534aaab22a0db6c4e07fd0000

笔记
--------------------------------
原理:

只能管理文本文件
直接在本地即可工作，真正的无中心，分布式。
--------------------------------
基本操作：

两步提交动作：ADD,commit
ADD与COMMIT可以分离
--------------------------------
恢复：

工作区修改，可以通过checkout全部恢复
暂存区修改（add后），可以通过git reset HEAD恢复
--------------------------------
查看详细信息
git log --graph --pretty=oneline --abbrev-commit
git relog
--------------------------------
远程：

同步到github
git remote add origin https://github.com/xiaorang/simple.git
git push -u origin master
有些分支同步的远程，有些分支保留在本地

以后的推送：
git push origin master
git push origin dev

查看远程信息
git remote -v

删除远程关联
git remote rm origin

关联dev分支
git branch --set-upstream-to=origin/dev dev

首先拉取合并
git pull
--------------------------------
分支：

创建分支
git checkout -b dev

进行修改后，再回到主分支，合并
git checkout master
git merge dev

删除分支
git branch -d dev

强行删除分支
git branch -D feature-vulcan

查看分支情况
git branch
--------------------------------
如果出现分支修改冲突，会用如下的形式标记出来，手工修改。
<<<<<<< HEAD

master change of conflict
=======
test1 of new
>>>>>>> test1
--------------------------------
查看更新记录
 git log --graph --pretty=oneline --abbrev-commit
--------------------------------
正常的分支工作模式：
master分支，仅用来发布
dev分支，用做开发的主分支
每个参与的开发者，再建立自己的分支，合并到dev分支中
dev完成后，合并到master中进行发布
--------------------------------
保存现场：
stash保存工作区现场
创建临时分支处理修复bug任务
然后在git stash pop 恢复现场继续工作
--------------------------------
.gitignore文件，
所有配置文件可以直接在线浏览：https://github.com/github/gitignore
--------------------------------
